// Mocks generated by Mockito 5.1.0 from annotations
// in todo_app/test/todos_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:flutter/material.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_app/helpers/database_helper.dart' as _i3;
import 'package:todo_app/models/todo_model.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTodo_0 extends _i1.Fake implements _i2.Todo {}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i3.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<int> addTodo({_i2.Todo? todo}) =>
      (super.noSuchMethod(Invocation.method(#addTodo, [], {#todo: todo}),
          returnValue: Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<_i2.Todo> updateTodo(int? key,
          {String? title,
          String? desc,
          DateTime? date,
          _i5.TimeOfDay? time,
          bool? completed}) =>
      (super.noSuchMethod(
              Invocation.method(#updateTodo, [
                key
              ], {
                #title: title,
                #desc: desc,
                #date: date,
                #time: time,
                #completed: completed
              }),
              returnValue: Future<_i2.Todo>.value(_FakeTodo_0()))
          as _i4.Future<_i2.Todo>);
  @override
  _i4.Future<void> deleteTodo(int? key) =>
      (super.noSuchMethod(Invocation.method(#deleteTodo, [key]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<List<_i2.Todo>> getAllTodos() =>
      (super.noSuchMethod(Invocation.method(#getAllTodos, []),
              returnValue: Future<List<_i2.Todo>>.value(<_i2.Todo>[]))
          as _i4.Future<List<_i2.Todo>>);
}
